@use "sass:map";
@use "../../colors" as *;

// Size and Shape
$button-sizes: (
		default: (
				width: fit-content,
		),
		size0: (
				width: 2rem,
		),
		size1: (
				width: 4rem,
		),
		size2: (
				width: 6rem,
		),
		size3: (
				width: 8rem,
		),
		size4: (
				width: 10rem,
		),
		size5: (
				width: 12rem,
		),
		size6: (
				width: 14rem,
		),
		size7: (
				width: 16rem,
		),
		size8: (
				width: 18rem,
		),
		size9: (
				width: 20rem,
		),
);

@mixin button-size-shape($size, $shape) {
  width: map.get(map.get($button-sizes, $size), width);
  max-width: 100%;
  height: 2rem;
  font-size: 1rem;
  padding: 1rem;

  @if $shape == circle {
	border-radius: 2rem;
  } @else if $shape == rounded {
	border-radius: 0.5rem;
  } @else if $shape == squared {
	border-radius: 0;
  } @else if $shape == square {
	border-radius: 0;
	height: auto;
	aspect-ratio: 1/1;
  }
}

@mixin button-variant($style, $color, $hover: false, $disabled: false) {
  border: none;

  @if $disabled {
	cursor: not-allowed !important;
  }

  @if $style == filled {
	box-shadow: 0 3px 3px 0 rgba(0, 0, 0, 0.2);

	@if $disabled {
	  background-color: map.get(map.get($colors, $color), shade-0);
	  color: map.get(map.get($colors, $color), shade-1);
	} @else if $hover {
	  background-color: map.get(map.get($colors, $color), shade-9);
	  color: map.get(map.get($colors, $color), shade-1);
	} @else {
	  background-color: map.get(map.get($colors, $color), shade-1);
	  color: map.get(map.get($colors, $color), shade-9);
	}
  } @else if $style == bordered {
	@if $disabled {
	  background-color: white;
	  color: map.get(map.get($colors, $color), shade-1);
	  -webkit-box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-1);
	  -moz-box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-1);
	  box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-1);
	} @else if $hover {
	  background-color: map.get(map.get($colors, $color), shade-1);
	  color: map.get(map.get($colors, $color), shade-9);
	  -webkit-box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-9);
	  -moz-box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-9);
	  box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-9);
	} @else {
	  background-color: white;
	  color: map.get(map.get($colors, $color), shade-5);
	  -webkit-box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-5);
	  -moz-box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-5);
	  box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-5);
	}
  } @else if $style == ghost {
	@if $disabled {
	  background-color: transparent;
	  color: map.get(map.get($colors, $color), shade-1);
	} @else if $hover {
	  background-color: map.get(map.get($colors, $color), shade-1);
	  color: map.get(map.get($colors, $color), shade-9);
	} @else {
	  background-color: transparent;
	  color: black;
	}
  }
}

.btn {
  transition-duration: 0.4s;
  cursor: pointer;

  // Size and Shape
  @each $size, $props in $button-sizes {
	&.#{$size}-circle {
	  @include button-size-shape($size, circle);
	}
	&.#{$size}-rounded {
	  @include button-size-shape($size, rounded);
	}
	&.#{$size}-squared {
	  @include button-size-shape($size, squared);
	}
	&.#{$size}-square {
	  @include button-size-shape($size, square);
	}
  }

  // Fill and Color
  @each $color, $props in $colors {
	&.filled-#{$color} {
	  @include button-variant(filled, $color);
	}
	&.filled-#{$color}:hover {
	  @include button-variant(filled, $color, true, false);
	}
	&.filled-#{$color}-selected {
	  @include button-variant(filled, $color, true, false);
	}
	&.filled-#{$color}:disabled {
	  @include button-variant(filled, $color, false, true);
	}

	&.bordered-#{$color} {
	  @include button-variant(bordered, $color);
	}
	&.bordered-#{$color}:hover {
	  @include button-variant(bordered, $color, true, false);
	}
	&.bordered-#{$color}-selected {
	  @include button-variant(bordered, $color, true, false);
	}
	&.bordered-#{$color}:disabled {
	  @include button-variant(bordered, $color, false, true);
	}

	&.ghost-#{$color} {
	  @include button-variant(ghost, $color);
	}
	&.ghost-#{$color}:hover {
	  @include button-variant(ghost, $color, true, false);
	}
	&.ghost-#{$color}-selected {
	  @include button-variant(ghost, $color, true, false);
	}
	&.ghost-#{$color}:disabled {
	  @include button-variant(ghost, $color, false, true);
	}
  }
}