@use "sass:map";

// Size and Shape
$button-sizes: (
  default: (
    width: fit-content,
    height: 2rem,
    font-size: 0.9rem,
    padding: 1rem,
  ),
  size0: (
    width: 2rem,
    height: 1.6rem,
    font-size: 0.7rem,
  ),
  size1: (
    width: 4rem,
    height: 1.7rem,
    font-size: 0.74rem,
),
  size2: (
    width: 6rem,
    height: 1.8rem,
    font-size: 0.78rem,
  ),
  size3: (
    width: 8rem,
    height: 1.9rem,
    font-size: 0.82rem,
  ),
  size4: (
    width: 10rem,
    height: 2rem,
    font-size: 0.86rem,
  ),
  size5: (
    width: 12rem,
    height: 2.1rem,
    font-size: 0.9rem,
  ),
  size6: (
    width: 14rem,
    height: 2.2rem,
    font-size: 0.925rem,
  ),
  size7: (
    width: 16rem,
    height: 2.3rem,
    font-size: 0.95rem,
  ),
  size8: (
    width: 18rem,
    height: 2.4rem,
    font-size: 0.975rem,
  ),
  size9: (
    width: 20rem,
    height: 2.5rem,
    font-size: 1rem,
  ),

);

@mixin button-size-shape($size, $shape) {
  $size-map: map.get($button-sizes, $size);
  $height: map.get($size-map, height);

  width: map.get($size-map, width);
  max-width: 100%;
  height: $height;
  font-size: map.get($size-map, font-size);
  padding: map.get($size-map, padding);

  @if $shape == circle {
    border-radius: $height;
  } @else if $shape == rounded {
    border-radius: 0.5rem;
  } @else if $shape == squared {
    border-radius: 0;
  } @else if $shape == square {
    border-radius: 0;
    height: auto;
    aspect-ratio: 1/1;
  }
}

$colors: (
  "red": (
    shade-0: color-mix(in srgb, var(--engineering-orange), white 90%),
    shade-1: color-mix(in srgb, var(--engineering-orange), white 80%),
    shade-5: color-mix(in srgb, var(--engineering-orange), white 50%),
    shade-9: color-mix(in srgb, var(--engineering-orange), black 50%),
  ),
  "blue": (
    shade-0: color-mix(in srgb, var(--azure), white 90%),
    shade-1: color-mix(in srgb, var(--azure), white 80%),
    shade-5: color-mix(in srgb, var(--azure), white 0%),
    shade-9: color-mix(in srgb, var(--azure), black 40%),
  ),
  "gray": (
    shade-0: color-mix(in srgb, var(--paynes-gray), white 90%),
    shade-1: color-mix(in srgb, var(--paynes-gray), white 80%),
    shade-5: color-mix(in srgb, var(--paynes-gray), white 0%),
    shade-9: color-mix(in srgb, var(--paynes-gray), black 40%),
  )
);

@mixin button-variant($style, $color, $hover: false, $disabled: false) {
  @if $disabled {
    cursor: not-allowed !important;
  }

  @if $style == filled {
    box-shadow: 0 3px 3px 0 rgba(0,0,0,0.2);

    @if $disabled {
      background-color: map.get(map.get($colors, $color), shade-0);
      border: none;
      color: map.get(map.get($colors, $color), shade-1);
    } @else if $hover {
      background-color: map.get(map.get($colors, $color), shade-9);
      border: none;
      color: map.get(map.get($colors, $color), shade-1);
    } @else {
      background-color: map.get(map.get($colors, $color), shade-1);
      border: none;
      color: map.get(map.get($colors, $color), shade-9);
    }
  } @else if $style == bordered {
    @if $disabled {
      background-color: white;
      border: 2px solid map.get(map.get($colors, $color), shade-1);
      color: map.get(map.get($colors, $color), shade-1);
      -webkit-box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-1), 0 0 0.2rem map.get(map.get($colors, $color), shade-1);
      -moz-box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-1), 0 0 0.2rem map.get(map.get($colors, $color), shade-1);
      box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-1), 0 0 0.2rem map.get(map.get($colors, $color), shade-1);
    } @else if $hover {
      background-color: white;
      border: 2px solid map.get(map.get($colors, $color), shade-9);
      color: map.get(map.get($colors, $color), shade-9);
      -webkit-box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-9), 0 0 0.2rem map.get(map.get($colors, $color), shade-9);
      -moz-box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-9), 0 0 0.2rem map.get(map.get($colors, $color), shade-9);
      box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-9), 0 0 0.2rem map.get(map.get($colors, $color), shade-9);
    } @else {
      background-color: white;
      border: 2px solid map.get(map.get($colors, $color), shade-5);
      color: map.get(map.get($colors, $color), shade-5);
      -webkit-box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-5), 0 0 0.2rem map.get(map.get($colors, $color), shade-5);
      -moz-box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-5), 0 0 0.2rem map.get(map.get($colors, $color), shade-5);
      box-shadow: inset 0 0 0.4rem map.get(map.get($colors, $color), shade-5), 0 0 0.2rem map.get(map.get($colors, $color), shade-5);
    }
  } @else if $style == ghost {
    @if $disabled {
      background-color: transparent;
      border: none;
      color: map.get(map.get($colors, $color), shade-1);
    } @else if $hover {
      background-color: map.get(map.get($colors, $color), shade-1);
      border: none;
      color: map.get(map.get($colors, $color), shade-9);
    } @else {
      background-color: transparent;
      border: none;
      color: black;
    }
  }
}

.btn {
  transition-duration: 0.4s;
  cursor: pointer;

  // Size and Shape
  @each $size, $props in $button-sizes {
    &.#{$size}-circle {
      @include button-size-shape($size, circle);
    }
    &.#{$size}-rounded {
      @include button-size-shape($size, rounded);
    }
    &.#{$size}-squared {
      @include button-size-shape($size, squared);
    }
    &.#{$size}-square {
      @include button-size-shape($size, square);
    }
  }

  // Fill and Color
  @each $color, $props in $colors {
    &.filled-#{$color} {
      @include button-variant(filled, $color);
    }
    &.filled-#{$color}:hover {
      @include button-variant(filled, $color, true, false);
    }
    &.filled-#{$color}-selected {
      @include button-variant(filled, $color, true, false);
    }
    &.filled-#{$color}:disabled {
      @include button-variant(filled, $color, false, true);
    }

    &.bordered-#{$color} {
      @include button-variant(bordered, $color);
    }
    &.bordered-#{$color}:hover {
      @include button-variant(bordered, $color, true, false);
    }
    &.bordered-#{$color}-selected {
      @include button-variant(bordered, $color, true, false);
    }
    &.bordered-#{$color}:disabled {
      @include button-variant(bordered, $color, false, true);
    }

    &.ghost-#{$color} {
      @include button-variant(ghost, $color);
    }
    &.ghost-#{$color}:hover {
      @include button-variant(ghost, $color, true, false);
    }
    &.ghost-#{$color}-selected {
      @include button-variant(ghost, $color, true, false);
    }
    &.ghost-#{$color}:disabled {
      @include button-variant(ghost, $color, false, true);
    }
  }
}